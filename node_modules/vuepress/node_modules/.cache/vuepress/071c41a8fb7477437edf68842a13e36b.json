{"remainingRequest":"/Users/mlf/Documents/数慧/学习笔记/maolfBook/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/mlf/Documents/数慧/学习笔记/maolfBook/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/mlf/Documents/数慧/学习笔记/maolfBook/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/mlf/Documents/数慧/学习笔记/maolfBook/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/mlf/Documents/数慧/学习笔记/maolfBook/docs/codeLint/README.md?vue&type=template&id=03713c94&","dependencies":[{"path":"/Users/mlf/Documents/数慧/学习笔记/maolfBook/docs/codeLint/README.md","mtime":1557814141388},{"path":"/Users/mlf/Documents/数慧/学习笔记/maolfBook/node_modules/cache-loader/dist/cjs.js","mtime":1550912094406},{"path":"/Users/mlf/Documents/数慧/学习笔记/maolfBook/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1552293419761},{"path":"/Users/mlf/Documents/数慧/学习笔记/maolfBook/node_modules/cache-loader/dist/cjs.js","mtime":1550912094406},{"path":"/Users/mlf/Documents/数慧/学习笔记/maolfBook/node_modules/vue-loader/lib/index.js","mtime":1552293419761},{"path":"/Users/mlf/Documents/数慧/学习笔记/maolfBook/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1557716010672}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _vm._m(0),\n    _vm._v(\" \"),\n    _c(\"blockquote\", [\n      _c(\"p\", [\n        _vm._v(\"源于 github上star最多的\"),\n        _c(\n          \"a\",\n          {\n            attrs: {\n              href:\n                \"https://github.com/airbnb/javascript/tree/es5-deprecated/es5\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }\n          },\n          [_vm._v(\"airbnb-es5\"), _c(\"OutboundLink\")],\n          1\n        ),\n        _vm._v(\"编码规范\")\n      ])\n    ]),\n    _vm._v(\" \"),\n    _c(\"blockquote\", [\n      _c(\"p\", [\n        _vm._v(\"中文版出处\"),\n        _c(\n          \"a\",\n          {\n            attrs: {\n              href:\n                \"https://github.com/sivan/javascript-style-guide/blob/master/es5/README.md#the-javascript-style-guide-guide\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }\n          },\n          [_vm._v(\"zh-airbnb-es5\"), _c(\"OutboundLink\")],\n          1\n        )\n      ])\n    ]),\n    _vm._v(\" \"),\n    _vm._m(1),\n    _vm._v(\" \"),\n    _vm._m(2),\n    _vm._v(\" \"),\n    _vm._m(3),\n    _vm._v(\" \"),\n    _vm._m(4),\n    _vm._v(\" \"),\n    _vm._m(5),\n    _vm._v(\" \"),\n    _c(\"ul\", [\n      _vm._m(6),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"不要使用\"),\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"http://es5.github.io/#x7.6.1\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"保留字\"), _c(\"OutboundLink\")],\n            1\n          ),\n          _vm._v(\"作为键名，它们在 IE8 下不工作。\"),\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"https://github.com/airbnb/javascript/issues/61\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"更多信息\"), _c(\"OutboundLink\")],\n            1\n          ),\n          _vm._v(\"。\")\n        ]),\n        _vm._v(\" \"),\n        _vm._m(7)\n      ]),\n      _vm._v(\" \"),\n      _vm._m(8)\n    ]),\n    _vm._v(\" \"),\n    _vm._m(9),\n    _vm._v(\" \"),\n    _vm._m(10),\n    _vm._v(\" \"),\n    _c(\"ul\", [\n      _vm._m(11),\n      _vm._v(\" \"),\n      _vm._m(12),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"当你需要拷贝数组时，使用 Array#slice。\"),\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"http://jsperf.com/converting-arguments-to-an-array/7\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"jsPerf\"), _c(\"OutboundLink\")],\n            1\n          )\n        ]),\n        _vm._v(\" \"),\n        _vm._m(13)\n      ]),\n      _vm._v(\" \"),\n      _vm._m(14)\n    ]),\n    _vm._v(\" \"),\n    _vm._m(15),\n    _vm._v(\" \"),\n    _vm._m(16),\n    _vm._v(\" \"),\n    _c(\"ul\", [\n      _vm._m(17),\n      _vm._v(\" \"),\n      _vm._m(18),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"注：若过度使用，通过连接符连接的长字符串可能会影响性能。\"),\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"http://jsperf.com/ya-string-concat\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"jsPerf\"), _c(\"OutboundLink\")],\n            1\n          ),\n          _vm._v(\" & \"),\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"https://github.com/airbnb/javascript/issues/40\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"讨论\"), _c(\"OutboundLink\")],\n            1\n          ),\n          _vm._v(\".\")\n        ]),\n        _vm._v(\" \"),\n        _vm._m(19)\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\n            \"程序化生成的字符串使用 Array#join 连接而不是使用连接符。尤其是 IE 下：\"\n          ),\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"http://jsperf.com/string-vs-array-concat/2\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"jsPerf\"), _c(\"OutboundLink\")],\n            1\n          ),\n          _vm._v(\".\")\n        ]),\n        _vm._v(\" \"),\n        _vm._m(20)\n      ])\n    ]),\n    _vm._v(\" \"),\n    _vm._m(21),\n    _vm._v(\" \"),\n    _vm._m(22),\n    _vm._v(\" \"),\n    _vm._m(23),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"- 永远不要在一个非函数代码块（if、while 等）中声明一个函数，浏览器允许你这么做，但它们的解析表现不一致，正确的做法是：在块外定义一个变量，然后将函数赋值给它。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"ul\", [\n      _c(\"li\", [\n        _c(\"p\", [\n          _c(\"strong\", [_vm._v(\"注：\")]),\n          _vm._v(\" ECMA-262 把 \"),\n          _c(\"code\", [_vm._v(\"块\")]),\n          _vm._v(\" 定义为一组语句。函数声明不是语句。\"),\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href:\n                  \"http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf#page=97\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"阅读对 ECMA-262 这个问题的说明\"), _c(\"OutboundLink\")],\n            1\n          ),\n          _vm._v(\"。\")\n        ]),\n        _vm._v(\" \"),\n        _vm._m(24)\n      ]),\n      _vm._v(\" \"),\n      _vm._m(25)\n    ]),\n    _vm._v(\" \"),\n    _vm._m(26),\n    _vm._v(\" \"),\n    _vm._m(27),\n    _vm._v(\" \"),\n    _vm._m(28),\n    _vm._v(\" \"),\n    _vm._m(29),\n    _vm._v(\" \"),\n    _vm._m(30),\n    _vm._v(\" \"),\n    _vm._m(31),\n    _vm._v(\" \"),\n    _vm._m(32),\n    _vm._v(\" \"),\n    _vm._m(33),\n    _vm._v(\" \"),\n    _c(\"ul\", [\n      _vm._m(34),\n      _vm._v(\" \"),\n      _vm._m(35),\n      _vm._v(\" \"),\n      _vm._m(36),\n      _vm._v(\" \"),\n      _vm._m(37),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"了解更多信息在 \"),\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href:\n                  \"http://www.adequatelygood.com/2010/2/JavaScript-Scoping-and-Hoisting\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"JavaScript Scoping & Hoisting\"), _c(\"OutboundLink\")],\n            1\n          ),\n          _vm._v(\" by \"),\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"http://www.adequatelygood.com/\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"Ben Cherry\"), _c(\"OutboundLink\")],\n            1\n          ),\n          _vm._v(\".\")\n        ])\n      ])\n    ]),\n    _vm._v(\" \"),\n    _vm._m(38),\n    _vm._v(\" \"),\n    _vm._m(39),\n    _vm._v(\" \"),\n    _c(\"ul\", [\n      _vm._m(40),\n      _vm._v(\" \"),\n      _vm._m(41),\n      _vm._v(\" \"),\n      _vm._m(42),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"了解更多信息在 \"),\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href:\n                  \"http://javascriptweblog.wordpress.com/2011/02/07/truth-equality-and-javascript/#more-2108\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"Truth Equality and JavaScript\"), _c(\"OutboundLink\")],\n            1\n          ),\n          _vm._v(\" by Angus Croll.\")\n        ])\n      ])\n    ]),\n    _vm._v(\" \"),\n    _vm._m(43),\n    _vm._v(\" \"),\n    _vm._m(44),\n    _vm._v(\" \"),\n    _vm._m(45),\n    _vm._v(\" \"),\n    _vm._m(46),\n    _vm._v(\" \"),\n    _vm._m(47),\n    _vm._v(\" \"),\n    _vm._m(48),\n    _vm._v(\" \"),\n    _vm._m(49),\n    _vm._v(\" \"),\n    _vm._m(50),\n    _vm._v(\" \"),\n    _vm._m(51),\n    _vm._v(\" \"),\n    _vm._m(52),\n    _vm._v(\" \"),\n    _vm._m(53),\n    _vm._v(\" \"),\n    _c(\"ul\", [\n      _vm._m(54),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"额外的行末逗号：\"),\n          _c(\"strong\", [_vm._v(\"不需要\")]),\n          _vm._v(\n            \"。这样做会在 IE6/7 和 IE9 怪异模式下引起问题。同样，多余的逗号在某些 ES3 的实现里会增加数组的长度。在 ES5 中已经澄清了 (\"\n          ),\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"http://es5.github.io/#D\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"source\"), _c(\"OutboundLink\")],\n            1\n          ),\n          _vm._v(\")：\")\n        ])\n      ])\n    ]),\n    _vm._v(\" \"),\n    _vm._m(55),\n    _vm._v(\" \"),\n    _vm._m(56),\n    _vm._v(\" \"),\n    _vm._m(57),\n    _vm._v(\" \"),\n    _vm._m(58),\n    _vm._v(\" \"),\n    _c(\"ul\", [\n      _c(\"li\", [\n        _vm._m(59),\n        _vm._v(\" \"),\n        _vm._m(60),\n        _c(\"p\", [\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"http://stackoverflow.com/a/7365214/1712802\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"了解更多\"), _c(\"OutboundLink\")],\n            1\n          ),\n          _vm._v(\".\")\n        ])\n      ])\n    ]),\n    _vm._v(\" \"),\n    _vm._m(61),\n    _vm._v(\" \"),\n    _vm._m(62),\n    _vm._v(\" \"),\n    _c(\"ul\", [\n      _vm._m(63),\n      _vm._v(\" \"),\n      _vm._m(64),\n      _vm._v(\" \"),\n      _vm._m(65),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"如果因为某些原因 \"),\n          _c(\"code\", [_vm._v(\"parseInt\")]),\n          _vm._v(\" 成为你所做的事的瓶颈而需要使用位操作解决\"),\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"http://jsperf.com/coercion-vs-casting/3\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"性能问题\"), _c(\"OutboundLink\")],\n            1\n          ),\n          _vm._v(\"时，留个注释说清楚原因和你的目的。\")\n        ]),\n        _vm._v(\" \"),\n        _vm._m(66)\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _c(\"strong\", [_vm._v(\"注：\")]),\n          _vm._v(\" 小心使用位操作运算符。数字会被当成 \"),\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"http://es5.github.io/#x4.3.19\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"64 位值\"), _c(\"OutboundLink\")],\n            1\n          ),\n          _vm._v(\"，但是位操作运算符总是返回 32 位的整数\")\n        ])\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h1\", { attrs: { id: \"es5\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#es5\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" ES5\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"blockquote\", [_c(\"p\", [_vm._v(\"用更合理的方式写 JavaScript\")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"类型\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#类型\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 类型\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _c(\"p\", [\n          _c(\"strong\", [_vm._v(\"原始值\")]),\n          _vm._v(\": 存取直接作用于它自身。\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"ul\", [\n          _c(\"li\", [_c(\"code\", [_vm._v(\"string\")])]),\n          _vm._v(\" \"),\n          _c(\"li\", [_c(\"code\", [_vm._v(\"number\")])]),\n          _vm._v(\" \"),\n          _c(\"li\", [_c(\"code\", [_vm._v(\"boolean\")])]),\n          _vm._v(\" \"),\n          _c(\"li\", [_c(\"code\", [_vm._v(\"null\")])]),\n          _vm._v(\" \"),\n          _c(\"li\", [_c(\"code\", [_vm._v(\"undefined\")])])\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n          _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n            _c(\"code\", [\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" foo \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n                _vm._v(\"1\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" bar \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" foo\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\nbar \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n                _vm._v(\"9\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\nconsole\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"log\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _vm._v(\"foo\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\" bar\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// => 1, 9\")\n              ]),\n              _vm._v(\"\\n\")\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _c(\"strong\", [_vm._v(\"复杂类型\")]),\n          _vm._v(\": 存取时作用于它自身值的引用。\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"ul\", [\n          _c(\"li\", [_c(\"code\", [_vm._v(\"object\")])]),\n          _vm._v(\" \"),\n          _c(\"li\", [_c(\"code\", [_vm._v(\"array\")])]),\n          _vm._v(\" \"),\n          _c(\"li\", [_c(\"code\", [_vm._v(\"function\")])])\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n          _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n            _c(\"code\", [\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" foo \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"[\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n                _vm._v(\"1\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n                _vm._v(\"2\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"]\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" bar \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" foo\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\nbar\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"[\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n                _vm._v(\"0\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"]\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n                _vm._v(\"9\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\nconsole\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"log\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _vm._v(\"foo\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"[\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n                _vm._v(\"0\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"]\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\" bar\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"[\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n                _vm._v(\"0\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"]\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// => 9, 9\")\n              ]),\n              _vm._v(\"\\n\")\n            ])\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", [_c(\"a\", { attrs: { href: \"#\" } }, [_vm._v(\"⬆ 回到顶部\")])])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"对象\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#对象\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 对象\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [_vm._v(\"使用直接量创建对象。\")]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// bad\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" item \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"new\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n              _vm._v(\"Object\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// good\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" item \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// bad\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" superman \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"default\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\" clark\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'kent'\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"private\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n            _vm._v(\"true\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// good\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" superman \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  defaults\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\" clark\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'kent'\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n  hidden\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n            _vm._v(\"true\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [_vm._v(\"使用同义词替换需要使用的保留字。\")]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// bad\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" superman \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"class\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'alien'\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// bad\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" superman \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  klass\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'alien'\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// good\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" superman \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  type\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'alien'\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", [_c(\"a\", { attrs: { href: \"#\" } }, [_vm._v(\"⬆ 回到顶部\")])])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"数组\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#数组\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 数组\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [_vm._v(\"使用直接量创建数组。\")]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// bad\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" items \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"new\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n              _vm._v(\"Array\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// good\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" items \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [_vm._v(\"向数组增加元素时使用 Array#push 来替代直接赋值。\")]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" someStack \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// bad\")\n            ]),\n            _vm._v(\"\\nsomeStack\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"someStack\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _vm._v(\"length\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'abracadabra'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// good\")\n            ]),\n            _vm._v(\"\\nsomeStack\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"push\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'abracadabra'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" len \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" items\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"length\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" itemsCopy \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" i\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// bad\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"for\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"i \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"0\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\" i \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"<\")\n          ]),\n          _vm._v(\" len\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\" i\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"++\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  itemsCopy\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _vm._v(\"i\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" items\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _vm._v(\"i\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// good\")\n          ]),\n          _vm._v(\"\\nitemsCopy \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" items\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"slice\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [_vm._v(\"使用 Array#slice 将类数组对象转换成数组。\")]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"function\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"trigger\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" args \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n              _vm._v(\"Array\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _vm._v(\"prototype\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"slice\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"call\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"arguments\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"...\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", [_c(\"a\", { attrs: { href: \"#\" } }, [_vm._v(\"⬆ 回到顶部\")])])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"字符串\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#字符串\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 字符串\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [\n        _vm._v(\"使用单引号 \"),\n        _c(\"code\", [_vm._v(\"''\")]),\n        _vm._v(\" 包裹字符串。\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// bad\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" name \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"Bob Parr\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// good\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" name \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'Bob Parr'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// bad\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" fullName \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"Bob \"')\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"+\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"this\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _vm._v(\"lastName\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// good\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" fullName \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'Bob '\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"+\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"this\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _vm._v(\"lastName\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [_vm._v(\"超过 100 个字符的字符串应该使用连接符写成多行。\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// bad\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" errorMessage \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\n              \"'This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.'\"\n            )\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// bad\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" errorMessage \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\n              \"'This is a super long error that was thrown because \\\\\\nof Batman. When you stop to think about how Batman had anything to do \\\\\\nwith this, you would get nowhere \\\\\\nfast.'\"\n            )\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// good\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" errorMessage \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'This is a super long error that was thrown because '\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\n              \"'of Batman. When you stop to think about how Batman had anything to do '\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'with this, you would get nowhere fast.'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" items\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" messages\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" length\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" i\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\\nmessages \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  state\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'success'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n  message\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'This one worked.'\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  state\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'success'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n  message\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'This one worked as well.'\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  state\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'error'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n  message\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'This one did not work.'\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\\nlength \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" messages\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"length\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// bad\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"inbox\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n            _vm._v(\"messages\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  items \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'<ul>'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"for\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"i \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"0\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\" i \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"<\")\n          ]),\n          _vm._v(\" length\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\" i\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"++\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    items \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'<li>'\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" messages\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _vm._v(\"i\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"message \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'</li>'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"return\")\n          ]),\n          _vm._v(\" items \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'</ul>'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// good\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"inbox\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n            _vm._v(\"messages\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  items \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"for\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"i \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"0\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\" i \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"<\")\n          ]),\n          _vm._v(\" length\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\" i\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"++\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\n              \"// use direct assignment in this case because we're micro-optimizing.\"\n            )\n          ]),\n          _vm._v(\"\\n    items\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _vm._v(\"i\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'<li>'\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" messages\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _vm._v(\"i\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"message \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'</li>'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"return\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'<ul>'\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" items\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"join\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"''\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'</ul>'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", [_c(\"a\", { attrs: { href: \"#\" } }, [_vm._v(\"⬆ 回到顶部\")])])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"函数\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#函数\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 函数\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _c(\"p\", [_vm._v(\"函数表达式：\")]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n          _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n            _c(\"code\", [\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// 匿名函数表达式\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"span\",\n                {\n                  pre: true,\n                  attrs: { class: \"token function-variable function\" }\n                },\n                [_vm._v(\"anonymous\")]\n              ),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"true\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// 命名函数表达式\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"span\",\n                {\n                  pre: true,\n                  attrs: { class: \"token function-variable function\" }\n                },\n                [_vm._v(\"named\")]\n              ),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"named\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"true\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// 立即调用的函数表达式（IIFE）\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  console\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"log\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'Welcome to the Internet. Please follow me.'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\")\n            ])\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// bad\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"if\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"currentUser\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"test\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    console\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'Nope.'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// good\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" test\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"if\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"currentUser\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\n            \"span\",\n            { pre: true, attrs: { class: \"token function-variable function\" } },\n            [_vm._v(\"test\")]\n          ),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"test\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    console\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'Yup.'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [\n        _vm._v(\"永远不要把参数命名为 \"),\n        _c(\"code\", [_vm._v(\"arguments\")]),\n        _vm._v(\"。这将取代函数作用域内的 \"),\n        _c(\"code\", [_vm._v(\"arguments\")]),\n        _vm._v(\" 对象。\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// bad\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"function\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"nope\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n              _vm._v(\"name\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\" options\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\" arguments\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// ...stuff...\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// good\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"function\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"yup\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n              _vm._v(\"name\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\" options\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\" args\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// ...stuff...\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", [_c(\"a\", { attrs: { href: \"#\" } }, [_vm._v(\"⬆ 回到顶部\")])])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"属性\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#属性\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 属性\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"使用 \"),\n          _c(\"code\", [_vm._v(\".\")]),\n          _vm._v(\" 来访问对象的属性。\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n          _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n            _c(\"code\", [\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" luke \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  jedi\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"true\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n  age\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n                _vm._v(\"28\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" isJedi \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" luke\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"[\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'jedi'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"]\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// good\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" isJedi \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" luke\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _vm._v(\"jedi\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\")\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"当通过变量访问属性时使用中括号 \"),\n          _c(\"code\", [_vm._v(\"[]\")]),\n          _vm._v(\"。\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n          _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n            _c(\"code\", [\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" luke \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  jedi\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"true\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n  age\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n                _vm._v(\"28\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"getProp\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n                _vm._v(\"prop\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" luke\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"[\")\n              ]),\n              _vm._v(\"prop\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"]\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" isJedi \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"getProp\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'jedi'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\")\n            ])\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", [_c(\"a\", { attrs: { href: \"#\" } }, [_vm._v(\"⬆ 回到顶部\")])])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"变量\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#变量\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 变量\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"总是使用 \"),\n          _c(\"code\", [_vm._v(\"var\")]),\n          _vm._v(\n            \" 来声明变量。不这么做将导致产生全局变量。我们要避免污染全局命名空间。\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n          _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n            _c(\"code\", [\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\nsuperPower \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"new\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n                _vm._v(\"SuperPower\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// good\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" superPower \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"new\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n                _vm._v(\"SuperPower\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\")\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"使用 \"),\n          _c(\"code\", [_vm._v(\"var\")]),\n          _vm._v(\n            \" 声明每一个变量。\\n这样做的好处是增加新变量将变的更加容易，而且你永远不用再担心调换错 \"\n          ),\n          _c(\"code\", [_vm._v(\";\")]),\n          _vm._v(\" 跟 \"),\n          _c(\"code\", [_vm._v(\",\")]),\n          _vm._v(\"。\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n          _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n            _c(\"code\", [\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" items \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"getItems\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n    goSportsTeam \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"true\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n    dragonball \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'z'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// （跟上面的代码比较一下，看看哪里错了）\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" items \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"getItems\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n    goSportsTeam \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"true\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n    dragonball \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'z'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// good\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" items \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"getItems\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" goSportsTeam \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"true\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" dragonball \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'z'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\")\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\n            \"最后再声明未赋值的变量。当你需要引用前面的变量赋值时这将变的很有用。\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n          _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n            _c(\"code\", [\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" i\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\" len\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\" dragonball\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n    items \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"getItems\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n    goSportsTeam \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"true\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" i\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" items \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"getItems\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" dragonball\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" goSportsTeam \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"true\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" len\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// good\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" items \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"getItems\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" goSportsTeam \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"true\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" dragonball\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" length\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" i\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\")\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"在作用域顶部声明变量。这将帮你避免变量声明提升相关的问题。\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n          _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n            _c(\"code\", [\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"test\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n  console\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"log\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'doing stuff..'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"//..other stuff..\")\n              ]),\n              _vm._v(\"\\n\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" name \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"getName\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"if\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _vm._v(\"name \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"===\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'test'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"false\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" name\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// good\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" name \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"getName\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"test\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n  console\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"log\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'doing stuff..'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"//..other stuff..\")\n              ]),\n              _vm._v(\"\\n\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"if\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _vm._v(\"name \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"===\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'test'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"false\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" name\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad - 不必要的函数调用\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" name \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"getName\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"if\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"!\")\n              ]),\n              _vm._v(\"arguments\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _vm._v(\"length\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"false\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"this\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"setFirstName\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _vm._v(\"name\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"true\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// good\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" name\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"if\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"!\")\n              ]),\n              _vm._v(\"arguments\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _vm._v(\"length\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"false\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\\n  name \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"getName\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"this\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"setFirstName\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _vm._v(\"name\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"true\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\")\n            ])\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", [_c(\"a\", { attrs: { href: \"#\" } }, [_vm._v(\"⬆ 回到顶部\")])])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"提升\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#提升\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 提升\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [_vm._v(\"变量声明会提升至作用域顶部，但赋值不会。\")]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"// 我们知道这样不能正常工作（假设这里没有名为 notDefined 的全局变量）\"\n              )\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"function\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"example\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  console\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"log\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"notDefined\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// => throws a ReferenceError\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"// 但由于变量声明提升的原因，在一个变量引用后再创建它的变量声明将可以正常工作。\"\n              )\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// 注：变量赋值为 `true` 不会提升。\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"function\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"example\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  console\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"log\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"declaredButNotAssigned\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// => undefined\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" declaredButNotAssigned \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n              _vm._v(\"true\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"// 解释器会把变量声明提升到作用域顶部，意味着我们的例子将被重写成：\"\n              )\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"function\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"example\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" declaredButNotAssigned\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n  console\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"log\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"declaredButNotAssigned\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// => undefined\")\n            ]),\n            _vm._v(\"\\n  declaredButNotAssigned \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n              _vm._v(\"true\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [\n        _vm._v(\"匿名函数表达式会提升它们的变量名，但不会提升函数的赋值。\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"function\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"example\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  console\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"log\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"anonymous\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// => undefined\")\n            ]),\n            _vm._v(\"\\n\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"anonymous\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// => TypeError anonymous is not a function\")\n            ]),\n            _vm._v(\"\\n\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"span\",\n              {\n                pre: true,\n                attrs: { class: \"token function-variable function\" }\n              },\n              [_vm._v(\"anonymous\")]\n            ),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"function\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    console\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"log\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'anonymous function expression'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [\n        _vm._v(\"命名函数表达式会提升变量名，但不会提升函数名或函数体。\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"function\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"example\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  console\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"log\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"named\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// => undefined\")\n            ]),\n            _vm._v(\"\\n\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"named\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// => TypeError named is not a function\")\n            ]),\n            _vm._v(\"\\n\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"superPower\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// => ReferenceError superPower is not defined\")\n            ]),\n            _vm._v(\"\\n\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"span\",\n              {\n                pre: true,\n                attrs: { class: \"token function-variable function\" }\n              },\n              [_vm._v(\"named\")]\n            ),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"function\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"superPower\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    console\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"log\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'Flying'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// 当函数名跟变量名一样时，表现也是如此。\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"function\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"example\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  console\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"log\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"named\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// => undefined\")\n            ]),\n            _vm._v(\"\\n\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"named\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// => TypeError named is not a function\")\n            ]),\n            _vm._v(\"\\n\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"span\",\n              {\n                pre: true,\n                attrs: { class: \"token function-variable function\" }\n              },\n              [_vm._v(\"named\")]\n            ),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"function\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"named\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    console\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"log\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'named'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [_vm._v(\"函数声明提升它们的名字和函数体。\")]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"function\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"example\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"superPower\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// => Flying\")\n            ]),\n            _vm._v(\"\\n\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"function\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"superPower\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    console\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"log\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'Flying'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", [_c(\"a\", { attrs: { href: \"#\" } }, [_vm._v(\"⬆ 回到顶部\")])])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"比较运算符-等号\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#比较运算符-等号\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 比较运算符 & 等号\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [\n        _vm._v(\"优先使用 \"),\n        _c(\"code\", [_vm._v(\"===\")]),\n        _vm._v(\" 和 \"),\n        _c(\"code\", [_vm._v(\"!==\")]),\n        _vm._v(\" 而不是 \"),\n        _c(\"code\", [_vm._v(\"==\")]),\n        _vm._v(\" 和 \"),\n        _c(\"code\", [_vm._v(\"!=\")]),\n        _vm._v(\".\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [\n        _vm._v(\"条件表达式例如 \"),\n        _c(\"code\", [_vm._v(\"if\")]),\n        _vm._v(\" 语句通过抽象方法 \"),\n        _c(\"code\", [_vm._v(\"ToBoolean\")]),\n        _vm._v(\" 强制计算它们的表达式并且总是遵守下面的规则：\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v(\"对象\")]),\n          _vm._v(\" 被计算为 \"),\n          _c(\"strong\", [_vm._v(\"true\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v(\"Undefined\")]),\n          _vm._v(\" 被计算为 \"),\n          _c(\"strong\", [_vm._v(\"false\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v(\"Null\")]),\n          _vm._v(\" 被计算为 \"),\n          _c(\"strong\", [_vm._v(\"false\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v(\"布尔值\")]),\n          _vm._v(\" 被计算为 \"),\n          _c(\"strong\", [_vm._v(\"布尔的值\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v(\"数字\")]),\n          _vm._v(\" 如果是 \"),\n          _c(\"strong\", [_vm._v(\"+0、-0 或 NaN\")]),\n          _vm._v(\" 被计算为 \"),\n          _c(\"strong\", [_vm._v(\"false\")]),\n          _vm._v(\"，否则为 \"),\n          _c(\"strong\", [_vm._v(\"true\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v(\"字符串\")]),\n          _vm._v(\" 如果是空字符串 \"),\n          _c(\"code\", [_vm._v(\"''\")]),\n          _vm._v(\" 被计算为 \"),\n          _c(\"strong\", [_vm._v(\"false\")]),\n          _vm._v(\"，否则为 \"),\n          _c(\"strong\", [_vm._v(\"true\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"if\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n              _vm._v(\"0\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// true\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// 一个数组就是一个对象，对象被计算为 true\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [_vm._v(\"使用快捷方式。\")]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// bad\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"if\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"name \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"!==\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"''\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// ...stuff...\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// good\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"if\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"name\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// ...stuff...\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// bad\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"if\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"collection\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _vm._v(\"length \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\">\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n              _vm._v(\"0\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// ...stuff...\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// good\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"if\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"collection\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _vm._v(\"length\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// ...stuff...\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", [_c(\"a\", { attrs: { href: \"#\" } }, [_vm._v(\"⬆ 回到顶部\")])])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"块\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#块\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 块\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _c(\"p\", [_vm._v(\"使用大括号包裹所有的多行代码块。\")]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n          _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n            _c(\"code\", [\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"if\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _vm._v(\"test\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"false\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// good\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"if\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _vm._v(\"test\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"false\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// good\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"if\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _vm._v(\"test\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"false\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"false\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// good\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"false\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\")\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"如果通过 \"),\n          _c(\"code\", [_vm._v(\"if\")]),\n          _vm._v(\" 和 \"),\n          _c(\"code\", [_vm._v(\"else\")]),\n          _vm._v(\" 使用多行代码块，把 \"),\n          _c(\"code\", [_vm._v(\"else\")]),\n          _vm._v(\" 放在 \"),\n          _c(\"code\", [_vm._v(\"if\")]),\n          _vm._v(\" 代码块关闭括号的同一行。\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n          _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n            _c(\"code\", [\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"if\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _vm._v(\"test\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"thing1\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"thing2\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"else\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"thing3\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// good\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"if\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _vm._v(\"test\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"thing1\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"thing2\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"else\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"thing3\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\")\n            ])\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", [_c(\"a\", { attrs: { href: \"#\" } }, [_vm._v(\"⬆ 回到顶部\")])])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"注释\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#注释\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 注释\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"使用 \"),\n          _c(\"code\", [_vm._v(\"/** ... */\")]),\n          _vm._v(\" 作为多行注释。包含描述、指定所有参数和返回值的类型和值。\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n          _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n            _c(\"code\", [\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// make() returns a new element\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// based on the passed in tag name\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"//\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// @param {String} tag\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// @return {Element} element\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"make\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n                _vm._v(\"tag\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// ...stuff...\")\n              ]),\n              _vm._v(\"\\n\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" element\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// good\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\n                  \"/**\\n * make() returns a new element\\n * based on the passed in tag name\\n *\\n * @param {String} tag\\n * @return {Element} element\\n */\"\n                )\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"make\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n                _vm._v(\"tag\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// ...stuff...\")\n              ]),\n              _vm._v(\"\\n\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" element\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\")\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"使用 \"),\n          _c(\"code\", [_vm._v(\"//\")]),\n          _vm._v(\n            \" 作为单行注释。在评论对象上面另起一行使用单行注释。在注释前插入空行。\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n          _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n            _c(\"code\", [\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" active \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"true\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// is current tab\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// good\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// is current tab\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" active \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"true\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"getType\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  console\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"log\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'fetching type...'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// set the default type to 'no type'\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" type \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"this\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _vm._v(\"type \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"||\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'no type'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" type\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// good\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"getType\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  console\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"log\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'fetching type...'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// set the default type to 'no type'\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" type \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"this\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _vm._v(\"type \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"||\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'no type'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" type\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\")\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"给注释增加 \"),\n          _c(\"code\", [_vm._v(\"FIXME\")]),\n          _vm._v(\" 或 \"),\n          _c(\"code\", [_vm._v(\"TODO\")]),\n          _vm._v(\n            \" 的前缀可以帮助其他开发者快速了解这是一个需要复查的问题，或是给需要实现的功能提供一个解决方式。这将有别于常见的注释，因为它们是可操作的。使用 \"\n          ),\n          _c(\"code\", [_vm._v(\"FIXME -- need to figure this out\")]),\n          _vm._v(\" 或者 \"),\n          _c(\"code\", [_vm._v(\"TODO -- need to implement\")]),\n          _vm._v(\"。\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"使用 \"),\n          _c(\"code\", [_vm._v(\"// FIXME:\")]),\n          _vm._v(\" 标注问题。\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n          _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n            _c(\"code\", [\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"Calculator\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// FIXME: shouldn't use a global here\")\n              ]),\n              _vm._v(\"\\n  total \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n                _vm._v(\"0\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"this\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\")\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"使用 \"),\n          _c(\"code\", [_vm._v(\"// TODO:\")]),\n          _vm._v(\" 标注问题的解决方式。\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n          _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n            _c(\"code\", [\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"Calculator\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\n                  \"// TODO: total should be configurable by an options param\"\n                )\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"this\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _vm._v(\"total \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n                _vm._v(\"0\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"this\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\")\n            ])\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", [_c(\"a\", { attrs: { href: \"#\" } }, [_vm._v(\"⬆ 回到顶部\")])])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"空白\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#空白\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 空白\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _c(\"p\", [_vm._v(\"使用 2 个空格作为缩进。\")]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n          _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n            _c(\"code\", [\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n∙∙∙∙\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" name\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n∙\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" name\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// good\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n∙∙\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" name\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\")\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [_vm._v(\"在大括号前放一个空格。\")]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n          _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n            _c(\"code\", [\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"test\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  console\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"log\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'test'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// good\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"test\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  console\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"log\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'test'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\ndog\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"set\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'attr'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  age\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'1 year'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n  breed\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'Bernese Mountain Dog'\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// good\")\n              ]),\n              _vm._v(\"\\ndog\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"set\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'attr'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  age\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'1 year'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n  breed\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'Bernese Mountain Dog'\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\")\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"在控制语句（\"),\n          _c(\"code\", [_vm._v(\"if\")]),\n          _vm._v(\"、\"),\n          _c(\"code\", [_vm._v(\"while\")]),\n          _vm._v(\n            \" 等）的小括号前放一个空格。在函数调用及声明中，不在函数的参数列表前加空格。\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n          _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n            _c(\"code\", [\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"if\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _vm._v(\"isJedi\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"fight\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// good\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"if\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _vm._v(\"isJedi\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"fight\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"fight\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  console\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"log\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'Swooosh!'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// good\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"fight\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  console\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"log\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'Swooosh!'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\")\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [_vm._v(\"使用空格把运算符隔开。\")]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n          _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n            _c(\"code\", [\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" x\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\"y\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"+\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n                _vm._v(\"5\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// good\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" x \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" y \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"+\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n                _vm._v(\"5\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\")\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [_vm._v(\"在文件末尾插入一个空行。\")]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n          _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n            _c(\"code\", [\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n                _vm._v(\"global\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// ...stuff...\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"this\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\")\n            ])\n          ])\n        ]),\n        _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n          _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n            _c(\"code\", [\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n                _vm._v(\"global\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// ...stuff...\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"this\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"↵\\n↵\\n\")\n            ])\n          ])\n        ]),\n        _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n          _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n            _c(\"code\", [\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// good\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n                _vm._v(\"global\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// ...stuff...\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"this\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"↵\\n\")\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"在使用长方法链时进行缩进。使用前面的点 \"),\n          _c(\"code\", [_vm._v(\".\")]),\n          _vm._v(\" 强调这是方法调用而不是新语句。\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n          _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n            _c(\"code\", [\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"$\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'#items'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"find\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'.selected'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"highlight\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"end\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"find\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'.open'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"updateCount\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"$\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'#items'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"find\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'.selected'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"highlight\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"end\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"find\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'.open'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"updateCount\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// good\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"$\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'#items'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"find\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'.selected'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"highlight\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"end\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"find\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'.open'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"updateCount\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" leds \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" stage\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"selectAll\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'.led'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"data\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _vm._v(\"data\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"enter\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"append\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'svg:svg'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"classed\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'led'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"true\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"attr\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'width'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _vm._v(\"radius \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"+\")\n              ]),\n              _vm._v(\" margin\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"*\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n                _vm._v(\"2\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"append\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'svg:g'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"attr\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'transform'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'translate('\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"+\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _vm._v(\"radius \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"+\")\n              ]),\n              _vm._v(\" margin\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"+\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"','\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"+\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _vm._v(\"radius \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"+\")\n              ]),\n              _vm._v(\" margin\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"+\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"')'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"call\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _vm._v(\"tron\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _vm._v(\"led\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// good\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" leds \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" stage\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"selectAll\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'.led'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"data\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _vm._v(\"data\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"enter\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"append\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'svg:svg'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"classed\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'led'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n                _vm._v(\"true\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"attr\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'width'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _vm._v(\"radius \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"+\")\n              ]),\n              _vm._v(\" margin\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"*\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n                _vm._v(\"2\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"append\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'svg:g'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"attr\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'transform'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"'translate('\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"+\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _vm._v(\"radius \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"+\")\n              ]),\n              _vm._v(\" margin\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"+\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"','\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"+\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _vm._v(\"radius \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"+\")\n              ]),\n              _vm._v(\" margin\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"+\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                _vm._v(\"')'\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                _vm._v(\"call\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _vm._v(\"tron\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\".\")\n              ]),\n              _vm._v(\"led\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\")\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [_vm._v(\"在块末和新语句前插入空行。\")]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n          _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n            _c(\"code\", [\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"if\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _vm._v(\"foo\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" bar\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" baz\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// good\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"if\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _vm._v(\"foo\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" bar\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" baz\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// bad\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" obj \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\n                \"span\",\n                {\n                  pre: true,\n                  attrs: { class: \"token function-variable function\" }\n                },\n                [_vm._v(\"foo\")]\n              ),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\n                \"span\",\n                {\n                  pre: true,\n                  attrs: { class: \"token function-variable function\" }\n                },\n                [_vm._v(\"bar\")]\n              ),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" obj\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                _vm._v(\"// good\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"var\")\n              ]),\n              _vm._v(\" obj \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\n                \"span\",\n                {\n                  pre: true,\n                  attrs: { class: \"token function-variable function\" }\n                },\n                [_vm._v(\"foo\")]\n              ),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\",\")\n              ]),\n              _vm._v(\"\\n\\n  \"),\n              _c(\n                \"span\",\n                {\n                  pre: true,\n                  attrs: { class: \"token function-variable function\" }\n                },\n                [_vm._v(\"bar\")]\n              ),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"function\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"(\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\")\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"{\")\n              ]),\n              _vm._v(\"\\n  \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"}\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                _vm._v(\"return\")\n              ]),\n              _vm._v(\" obj\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\";\")\n              ]),\n              _vm._v(\"\\n\")\n            ])\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", [_c(\"a\", { attrs: { href: \"#\" } }, [_vm._v(\"⬆ 回到顶部\")])])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"逗号\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#逗号\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 逗号\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [\n        _vm._v(\"行首逗号: \"),\n        _c(\"strong\", [_vm._v(\"不需要\")]),\n        _vm._v(\"。\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// bad\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" story \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"\\n    once\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" upon\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" aTime\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// good\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" story \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"\\n  once\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n  upon\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n  aTime\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// bad\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" hero \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    firstName\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'Bob'\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" lastName\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'Parr'\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" heroName\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'Mr. Incredible'\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" superPower\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'strength'\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// good\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" hero \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  firstName\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'Bob'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n  lastName\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'Parr'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n  heroName\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'Mr. Incredible'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n  superPower\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'strength'\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"blockquote\", [\n      _c(\"p\", [\n        _vm._v(\n          \"Edition 5 clarifies the fact that a trailing comma at the end of an ArrayInitialiser does not add to the length of the array. This is not a semantic change from Edition 3 but some implementations may have previously misinterpreted this.\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"pre\", [\n      _c(\"code\", [\n        _vm._v(\n          \"```javascript\\n// bad\\nvar hero = {\\n  firstName: 'Kevin',\\n  lastName: 'Flynn',\\n};\\n\\nvar heroes = [\\n  'Batman',\\n  'Superman',\\n];\\n\\n// good\\nvar hero = {\\n  firstName: 'Kevin',\\n  lastName: 'Flynn'\\n};\\n\\nvar heroes = [\\n  'Batman',\\n  'Superman'\\n];\\n```\\n\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", [_c(\"a\", { attrs: { href: \"#\" } }, [_vm._v(\"⬆ 回到顶部\")])])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"分号\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#分号\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 分号\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [_c(\"strong\", [_vm._v(\"使用分号。\")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// bad\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" name \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'Skywalker'\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"return\")\n          ]),\n          _vm._v(\" name\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// good\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" name \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'Skywalker'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"return\")\n          ]),\n          _vm._v(\" name\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// good (防止函数在两个 IIFE 合并时被当成一个参数\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" name \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'Skywalker'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"return\")\n          ]),\n          _vm._v(\" name\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", [_c(\"a\", { attrs: { href: \"#\" } }, [_vm._v(\"⬆ 回到顶部\")])])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"类型转换\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#类型转换\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 类型转换\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [_c(\"p\", [_vm._v(\"在语句开始时执行类型转换。\")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [_vm._v(\"字符串：\")]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"//  => this.reviewScore = 9;\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// bad\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" totalScore \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"this\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _vm._v(\"reviewScore \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"+\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"''\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// good\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" totalScore \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"''\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"+\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"this\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _vm._v(\"reviewScore\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// bad\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" totalScore \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"''\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"+\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"this\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _vm._v(\"reviewScore \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"+\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"' total score'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// good\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" totalScore \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"this\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _vm._v(\"reviewScore \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"+\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"' total score'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [\n        _vm._v(\"使用 \"),\n        _c(\"code\", [_vm._v(\"parseInt\")]),\n        _vm._v(\" 转换数字时总是带上类型转换的基数。\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" inputValue \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'4'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// bad\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" val \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"new\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n              _vm._v(\"Number\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"inputValue\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// bad\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" val \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"+\")\n            ]),\n            _vm._v(\"inputValue\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// bad\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" val \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" inputValue \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\">>\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n              _vm._v(\"0\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// bad\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" val \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"parseInt\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"inputValue\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// good\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" val \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"Number\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"inputValue\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// good\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" val \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"parseInt\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"inputValue\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n              _vm._v(\"10\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// good\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\n              \"/**\\n * parseInt was the reason my code was slow.\\n * Bitshifting the String to coerce it to a\\n * Number made it a lot faster.\\n */\"\n            )\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" val \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" inputValue \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\">>\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"0\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}